{"remainingRequest":"/Users/yusonghu/Desktop/BLOGUI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yusonghu/Desktop/BLOGUI/packages/component/avatar/avatar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yusonghu/Desktop/BLOGUI/packages/component/avatar/avatar.vue","mtime":1583313006050},{"path":"/Users/yusonghu/Desktop/BLOGUI/node_modules/cache-loader/dist/cjs.js","mtime":1583290073623},{"path":"/Users/yusonghu/Desktop/BLOGUI/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport mixinBase from \"../mixins/base\";\nimport mixinEmitter from \"../mixins/emitter\";\nimport BUIcon from \"../icon\";\nimport BUBadge from \"../badge\"\nexport default {\n  name: \"BUAvatar\",\n  components: {\n    BUIcon,\n    BUBadge\n  },\n  data(){\n    return {\n      srcToShow : ''\n    }\n  },\n  mixins: [mixinBase, mixinEmitter],\n  props: {\n    src: {\n      type:String,\n      // required: true\n    },\n    shape: {\n      type: String,\n      default: 'circle',\n      validator: val => ['square', 'circle'].indexOf(val) > -1\n    },\n    withBorder: {\n      type: Boolean,\n      default: false\n    },\n    size: {\n      type: String,\n      validator: val => ['s', 'l'].indexOf(val) > -1\n    },//s、l\n    badge: String,\n    icon: String,\n    status: {\n      type: String,\n      validator: val => ['online', 'offline', 'ongame'].indexOf(val) > -1\n    },//online offline ongame\n    onerror: {\n      type: [String,Function]\n    }\n  },\n  computed:{\n    pagePrefixCls(){\n      return `${this.classPrefix}-avatar`\n    },\n    classNames() {\n      return [\n        `${this.pagePrefixCls}`,\n        `${this.shape ? `${this.pagePrefixCls}--${this.shape}` : \"\"}`,\n        `${this.size ? `${this.pagePrefixCls}--${this.size}` : \"\"}`,\n        `${this.withBorder ? `${this.pagePrefixCls}--border` : \"\"}`,\n      ];\n    },\n  },\n  mounted () {\n    this.$refs.curImgDom.onerror = () => {\n      if (typeof this.onerror == 'function'){\n        this.srcToShow = this.onerror()\n      }\n      if (typeof this.onerror == 'string'){\n        this.srcToShow = this.onerror\n      }\n    }\n  },\n  created () {\n    this.srcToShow = this.src;\n  },\n  methods:{\n    onClick(){\n      this.$emit('on-click');\n    }\n  }\n};\n",{"version":3,"sources":["avatar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"avatar.vue","sourceRoot":"packages/component/avatar","sourcesContent":["<template>\n  <div\n    :class=\"classNames\"\n    @click=\"onClick\"\n  >\n    <img\n      v-if=\"srcToShow\"\n      :class=\"`${pagePrefixCls}-pic`\"\n      :src=\"srcToShow\"\n      ref=\"curImgDom\"\n    >\n    <sub v-if=\"badge\"><BUBadge :text=\"badge\"></BUBadge></sub>\n    <BUIcon\n      v-if=\"icon\"\n      :name=\"icon\"\n      :class-extra=\"`${pagePrefixCls}-icon`\"\n    ></BUIcon>\n  </div>\n</template>\n\n<script>\nimport mixinBase from \"../mixins/base\";\nimport mixinEmitter from \"../mixins/emitter\";\nimport BUIcon from \"../icon\";\nimport BUBadge from \"../badge\"\nexport default {\n  name: \"BUAvatar\",\n  components: {\n    BUIcon,\n    BUBadge\n  },\n  data(){\n    return {\n      srcToShow : ''\n    }\n  },\n  mixins: [mixinBase, mixinEmitter],\n  props: {\n    src: {\n      type:String,\n      // required: true\n    },\n    shape: {\n      type: String,\n      default: 'circle',\n      validator: val => ['square', 'circle'].indexOf(val) > -1\n    },\n    withBorder: {\n      type: Boolean,\n      default: false\n    },\n    size: {\n      type: String,\n      validator: val => ['s', 'l'].indexOf(val) > -1\n    },//s、l\n    badge: String,\n    icon: String,\n    status: {\n      type: String,\n      validator: val => ['online', 'offline', 'ongame'].indexOf(val) > -1\n    },//online offline ongame\n    onerror: {\n      type: [String,Function]\n    }\n  },\n  computed:{\n    pagePrefixCls(){\n      return `${this.classPrefix}-avatar`\n    },\n    classNames() {\n      return [\n        `${this.pagePrefixCls}`,\n        `${this.shape ? `${this.pagePrefixCls}--${this.shape}` : \"\"}`,\n        `${this.size ? `${this.pagePrefixCls}--${this.size}` : \"\"}`,\n        `${this.withBorder ? `${this.pagePrefixCls}--border` : \"\"}`,\n      ];\n    },\n  },\n  mounted () {\n    this.$refs.curImgDom.onerror = () => {\n      if (typeof this.onerror == 'function'){\n        this.srcToShow = this.onerror()\n      }\n      if (typeof this.onerror == 'string'){\n        this.srcToShow = this.onerror\n      }\n    }\n  },\n  created () {\n    this.srcToShow = this.src;\n  },\n  methods:{\n    onClick(){\n      this.$emit('on-click');\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n  @import \"../../assets/css/variable.scss\";\n  @import \"../../assets/css/mixin.scss\";\n  $avatar-prefix        : '.' + $css-prefix + 'avatar';\n  $avatar-corner        : $corner-circle !default;\n  $avatar-border-color  : $color-white !default;\n  $avatar-size          : $s-1*10 !default;\n  $avatar-border-width  : $s-1/2 !default;\n  $avatar-size-l        : 15*$s-1 !default;\n  $avatar-border-width-l: $s-1 !default;\n  $avatar-size-s        : 6*$s-1 !default;\n  $avatar-border-width-s: $s-1/2 !default;\n\n  $avatar-icon-size     : 4*$s-1 !default;\n  $avatar-icon-corner   : $corner-circle !default;\n  $avatar-icon-bg-color : rgba($color-black,0.8) !default;\n  $avatar-icon-color    : $color-white !default;\n  $avatar-icon-font-size: $font-size-s !default;\n  $avatar-sup-top             : -$s-1*1 !default;\n  $avatar-sup-right           : -$s-1*2 !default;\n\n\n\n  #{$avatar-prefix}{\n    width:$avatar-size;\n    height:$avatar-size;\n    position: relative;\n    cursor: pointer;\n    & > sub {\n      position: absolute;\n      top:$avatar-sup-top;\n      right:$avatar-sup-right;\n      line-height:1;\n    }\n    &-pic{\n      display:block;\n      width:100%;\n      height:100%;\n      border-radius:$avatar-corner;\n    }\n    &-icon{\n      position: absolute;\n      bottom:0;\n      right:0;\n      width:$avatar-icon-size;\n      height:$avatar-icon-size;\n      background-color:$avatar-icon-bg-color;\n      border-radius:$avatar-icon-corner;\n      font-size:$avatar-icon-font-size;\n      color:$avatar-icon-color;\n      line-height:$avatar-icon-size;\n      text-align:center;\n      vertical-align: middle;\n      &#{$class-prefix}-icon{\n        line-height:$avatar-icon-size;\n      }\n    }\n    &--square{\n      border-radius:0;\n      #{$avatar-prefix}-pic{\n        border-radius:0;\n      }\n    }\n    &--circle{\n      border-radius:$avatar-corner;\n      #{$avatar-prefix}-pic{\n        border-radius:$avatar-corner;\n      }\n    }\n    &--border{\n      border:$avatar-border-width solid $avatar-border-color;\n    }\n    &--l{\n      width:$avatar-size-l;\n      height:$avatar-size-l;\n      &#{$avatar-prefix}--border{\n        border:$avatar-border-width-l solid $avatar-border-color;\n      }\n    }\n    &--s{\n      width:$avatar-size-s;\n      height:$avatar-size-s;\n      &#{$avatar-prefix}--border{\n        border:$avatar-border-width-s solid $avatar-border-color;\n      }\n    }\n\n  }\n</style>\n"]}]}
{"remainingRequest":"/Users/yusonghu/Desktop/BLOGUI/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yusonghu/Desktop/BLOGUI/packages/component/tabnav/tabnav.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yusonghu/Desktop/BLOGUI/packages/component/tabnav/tabnav.vue","mtime":1583330248995},{"path":"/Users/yusonghu/Desktop/BLOGUI/node_modules/cache-loader/dist/cjs.js","mtime":1583290073623},{"path":"/Users/yusonghu/Desktop/BLOGUI/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import mixinBase from \"../mixins/base\";\n  import mixinEmitter from \"../mixins/emitter\";\n\n  export default {\n  name: \"BUTabnav\",\n  mixins: [mixinBase, mixinEmitter],\n  props: {\n    value: {},\n    customBarWidth: [Function, String],\n    preventDefault: Boolean,\n    useFlex:{\n      type: Boolean,\n      default: false\n    },\n  },\n  data(){\n    return{\n      timeID: -1,\n      index: this.value || 0,\n      direction: 'forward',\n      number: this.$children.length,\n      hasReady: false,\n      tabnavListArr:[],\n      tabnavListWidth:0,\n      itemIndex:-1,\n      underlineOffset:0,\n      underlineWidth:-1,\n      scrollable:false,\n      scrollThreshold:4,\n    }\n  },\n  computed:{\n    pagePrefixCls(){\n      return `${this.classPrefix}-tabnav`\n    },\n    classNames() {\n      return [\n        `${this.pagePrefixCls}-navlist`,\n        `${this.scrollable?`${this.pagePrefixCls}-navlist--scrollable`:''}`,\n        `${this.useFlex?`${this.pagePrefixCls}-navlist--flex`:`${this.pagePrefixCls}-navlist--noflex`}`,\n      ];\n    },\n    underlineClassNames() {\n      return [\n        `${this.pagePrefixCls}-underline`,\n        `${this.direction==='forward'?`${this.pagePrefixCls}-underline--transition-forward`:`${this.pagePrefixCls}-underline--transition-backward`}`,\n      ];\n    },\n    // when prop:custom-bar-width\n    innerBarStyle () {\n      return {\n        width: typeof this.customBarWidth === 'function' ? this.customBarWidth(this.index) : this.customBarWidth,\n        background: this.barActiveColor || this.activeColor\n      }\n    },\n    // end\n    barStyle () {\n      return {\n        width: this.useFlex ? (this.scrollable ? \"22%\" : 100 / this.number + '%') : this.underlineWidth + 'px',\n        transform: 'translate(' + (this.underlineOffset) + 'px, 0)',\n        display: 'block',\n        transition: !this.hasReady ? 'none' : null,\n        background: this.customBarWidth ? 'transparent' : this.barActiveColor || this.activeColor\n      }\n    },\n  },\n  watch:{\n    index (newIndex,oldIndex) {\n      this.direction = newIndex > oldIndex ? 'forward' : 'backward'\n      this.hasReady && this.scrollToActiveTab();\n      this.getUnderlineOffset();\n    },\n    value (val) {\n      this.index = val;\n    }\n  },\n  mounted () {\n    this.number = this.$children.length;\n    this.underlineWidth = this.$refs.nav.offsetWidth / this.number;\n    // // stop bar anmination on first loading\n\n    this.$on('TabItemMounted', (elm) => {\n      elm.index = ++ this.itemIndex;\n      this.tabnavListArr.push(elm);\n\n      clearTimeout(this.timeID)\n      this.timeID = setTimeout(() => {\n        this.tabnavListWidth = elm.$el.offsetWidth + elm.$el.offsetLeft;\n        if(elm.$el.offsetWidth<this.underlineWidth){\n          this.underlineWidth = elm.$el.offsetWidth\n        }\n        this.scrollable = this.useFlex?(this.tabnavListArr.length > this.scrollThreshold):(this.tabnavListWidth > this.$refs.nav.offsetWidth);\n        this.getUnderlineOffset();\n        // this.scrollToActiveTab(); //tabnav item 滑动\n      }, 50);\n\n    })\n\n\n    this.$on('input',(index) => {\n      this.index = index\n    })\n\n    this.underlineOffset = (this.$children && this.$children.length)?this.$children[this.index].$el.offsetLeft:0;\n    this.getUnderlineOffset();\n    // this.underlineOffset = currentIndexTab.offsetLeft;\n  },\n  methods:{\n    // 模拟横行滚动\n    scrollToActiveTab () {\n      if (!this.scrollable || !this.$children || !this.$children.length) {\n        return\n      }\n      const currentIndexTab = this.$children[this.index].$el\n\n      let count = 0\n      // scroll animation\n      const step = () => {\n        const scrollDuration = 15\n        const nav = this.$refs.nav\n        nav.scrollLeft += (currentIndexTab.offsetLeft - (nav.offsetWidth - currentIndexTab.offsetWidth) / 2 - nav.scrollLeft) / scrollDuration\n        if (++count < scrollDuration) {\n          window.requestAnimationFrame(step)\n        }\n      }\n      window.requestAnimationFrame(step)\n    },\n\n    getUnderlineOffset(){\n      if (!this.$children || !this.$children.length) {\n        return\n      }\n      const currentIndexTab = this.$children[this.index].$el;\n\n      this.underlineOffset = this.useFlex?(currentIndexTab.offsetLeft):(currentIndexTab.offsetLeft + (currentIndexTab.offsetWidth-this.underlineWidth)/2);\n    }\n  }\n};\n",{"version":3,"sources":["tabnav.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"tabnav.vue","sourceRoot":"packages/component/tabnav","sourcesContent":["<template>\n  <div :class=\"`${pagePrefixCls}-nav`\">\n    <div\n      ref=\"nav\"\n      :class=\"classNames\"\n    >\n      <slot></slot>\n      <div\n        :class=\"underlineClassNames\"\n        :style=\"barStyle\"\n      >\n        <span\n          v-if=\"customBarWidth\"\n          :class=\"`${pagePrefixCls}-underline-inner`\"\n          :style=\"innerBarStyle\"\n        ></span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import mixinBase from \"../mixins/base\";\n  import mixinEmitter from \"../mixins/emitter\";\n\n  export default {\n  name: \"BUTabnav\",\n  mixins: [mixinBase, mixinEmitter],\n  props: {\n    value: {},\n    customBarWidth: [Function, String],\n    preventDefault: Boolean,\n    useFlex:{\n      type: Boolean,\n      default: false\n    },\n  },\n  data(){\n    return{\n      timeID: -1,\n      index: this.value || 0,\n      direction: 'forward',\n      number: this.$children.length,\n      hasReady: false,\n      tabnavListArr:[],\n      tabnavListWidth:0,\n      itemIndex:-1,\n      underlineOffset:0,\n      underlineWidth:-1,\n      scrollable:false,\n      scrollThreshold:4,\n    }\n  },\n  computed:{\n    pagePrefixCls(){\n      return `${this.classPrefix}-tabnav`\n    },\n    classNames() {\n      return [\n        `${this.pagePrefixCls}-navlist`,\n        `${this.scrollable?`${this.pagePrefixCls}-navlist--scrollable`:''}`,\n        `${this.useFlex?`${this.pagePrefixCls}-navlist--flex`:`${this.pagePrefixCls}-navlist--noflex`}`,\n      ];\n    },\n    underlineClassNames() {\n      return [\n        `${this.pagePrefixCls}-underline`,\n        `${this.direction==='forward'?`${this.pagePrefixCls}-underline--transition-forward`:`${this.pagePrefixCls}-underline--transition-backward`}`,\n      ];\n    },\n    // when prop:custom-bar-width\n    innerBarStyle () {\n      return {\n        width: typeof this.customBarWidth === 'function' ? this.customBarWidth(this.index) : this.customBarWidth,\n        background: this.barActiveColor || this.activeColor\n      }\n    },\n    // end\n    barStyle () {\n      return {\n        width: this.useFlex ? (this.scrollable ? \"22%\" : 100 / this.number + '%') : this.underlineWidth + 'px',\n        transform: 'translate(' + (this.underlineOffset) + 'px, 0)',\n        display: 'block',\n        transition: !this.hasReady ? 'none' : null,\n        background: this.customBarWidth ? 'transparent' : this.barActiveColor || this.activeColor\n      }\n    },\n  },\n  watch:{\n    index (newIndex,oldIndex) {\n      this.direction = newIndex > oldIndex ? 'forward' : 'backward'\n      this.hasReady && this.scrollToActiveTab();\n      this.getUnderlineOffset();\n    },\n    value (val) {\n      this.index = val;\n    }\n  },\n  mounted () {\n    this.number = this.$children.length;\n    this.underlineWidth = this.$refs.nav.offsetWidth / this.number;\n    // // stop bar anmination on first loading\n\n    this.$on('TabItemMounted', (elm) => {\n      elm.index = ++ this.itemIndex;\n      this.tabnavListArr.push(elm);\n\n      clearTimeout(this.timeID)\n      this.timeID = setTimeout(() => {\n        this.tabnavListWidth = elm.$el.offsetWidth + elm.$el.offsetLeft;\n        if(elm.$el.offsetWidth<this.underlineWidth){\n          this.underlineWidth = elm.$el.offsetWidth\n        }\n        this.scrollable = this.useFlex?(this.tabnavListArr.length > this.scrollThreshold):(this.tabnavListWidth > this.$refs.nav.offsetWidth);\n        this.getUnderlineOffset();\n        // this.scrollToActiveTab(); //tabnav item 滑动\n      }, 50);\n\n    })\n\n\n    this.$on('input',(index) => {\n      this.index = index\n    })\n\n    this.underlineOffset = (this.$children && this.$children.length)?this.$children[this.index].$el.offsetLeft:0;\n    this.getUnderlineOffset();\n    // this.underlineOffset = currentIndexTab.offsetLeft;\n  },\n  methods:{\n    // 模拟横行滚动\n    scrollToActiveTab () {\n      if (!this.scrollable || !this.$children || !this.$children.length) {\n        return\n      }\n      const currentIndexTab = this.$children[this.index].$el\n\n      let count = 0\n      // scroll animation\n      const step = () => {\n        const scrollDuration = 15\n        const nav = this.$refs.nav\n        nav.scrollLeft += (currentIndexTab.offsetLeft - (nav.offsetWidth - currentIndexTab.offsetWidth) / 2 - nav.scrollLeft) / scrollDuration\n        if (++count < scrollDuration) {\n          window.requestAnimationFrame(step)\n        }\n      }\n      window.requestAnimationFrame(step)\n    },\n\n    getUnderlineOffset(){\n      if (!this.$children || !this.$children.length) {\n        return\n      }\n      const currentIndexTab = this.$children[this.index].$el;\n\n      this.underlineOffset = this.useFlex?(currentIndexTab.offsetLeft):(currentIndexTab.offsetLeft + (currentIndexTab.offsetWidth-this.underlineWidth)/2);\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n\n  @import \"../../assets/css/variable.scss\";\n  @import \"../../assets/css/mixin.scss\";\n\n\n  /* Tabnav */\n  $tabnav-prefix              : '.' + $css-prefix + 'tabnav';\n  $tabnav-nav-bg-color        : $color-white !default;\n  $tabnav-nav-height          : $s-1*25 !default;\n  $tabnav-nav-padding         : 0 !default;\n  $tabnav-nav-border-color    : $color-line-1 !default;\n  $tabnav-item-font-size      : $font-size-base !default;\n  $tabnav-item-border-color   : $color-line-1 !default;\n  $tabnav-item-border-width   : $line-0 !default;\n  $tabnav-item-bg-color       : $color-transparent !default;\n  $tabnav-item-bg-color-active: $color-fill-4 !default;\n  $tabnav-item-color          : $color-text-1 !default;\n  $tabnav-item-color-active   : $color-brand1 !default;\n  $tabnav-item-padding        : $s-1*4 !default;\n\n  $tabnav-underline-width   : $s-1*10 !default;\n  $tabnav-underline-height  : $s-1/2 !default;\n  $tabnav-underline-bg-color: $color-brand1 !default;\n\n  $tabnav-icon-size: $s-1*6 !default;\n  $tabnav-sup-top  : -$s-1*1 !default;\n  $tabnav-sup-right: -$s-1*2 !default;\n\n\n\n  #{$tabnav-prefix}{\n\n    &-nav{\n      width:100%;\n      padding:$tabnav-nav-padding;\n      height:$tabnav-nav-height;\n      background-color: $tabnav-nav-bg-color;\n      @include onePx($tabnav-nav-border-color,bottom);\n    }\n    &-navlist{\n      position: relative;\n      height:100%;\n      display: flex;\n      align-items:center;\n      &--scrollable{\n        overflow-y: hidden;\n        overflow-x: auto;\n        -webkit-overflow-scrolling: touch;\n        box-sizing: content-box;\n        &::-webkit-scrollbar {\n          display: none;\n        }\n      }\n      &--flex{\n        // display: flex;\n        #{$tabnav-prefix}-item{\n          width:100%;\n          height:100%;\n          flex:1;\n          // display: flex;\n          // align-items:center;\n          // justify-content: center;\n          padding:0;\n          // @include align-flex();\n          // @include align-flex-middle();\n          // @include align-flex-center();\n          @include ellipsis(100%);\n        }\n        &#{$tabnav-prefix}-navlist--scrollable{\n          #{$tabnav-prefix}-item{\n            flex: 0 0 22%;\n          }\n        }\n      }\n      &--noflex{\n        #{$tabnav-prefix}-item{\n          flex:none;\n        }\n      }\n    }\n    &-item{\n      font-size:$tabnav-item-font-size;\n      color:$tabnav-item-color;\n      border:$tabnav-item-border-width solid $tabnav-item-border-color;\n      background-color:$tabnav-item-bg-color;\n      box-sizing:border-box;\n      padding:0 $tabnav-item-padding;\n      flex:none;\n      display: flex;\n      align-items:center;\n      justify-content: center;\n      &-label{\n        @include ellipsis(100%);\n        text-align:center;\n      }\n      &--active{\n        color:$tabnav-item-color-active;\n      }\n    }\n    &-underline{\n      position: absolute;\n      height: $tabnav-underline-height;\n      bottom: 0;\n      left: 0;\n      background-color: $tabnav-underline-bg-color;\n      text-align: center;\n      &-inner{\n        display:block;\n        margin:0 auto;\n        height: $tabnav-underline-height;\n        width:100%;\n        background-color: $tabnav-underline-bg-color;\n      }\n    }\n    &--fixed{\n      position:fixed;\n      bottom:0;\n      left:0;\n    }\n  }\n\n</style>\n"]}]}